syntax = "proto3";
package lcp.service.enclave.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/datachainlab/lcp/go/relay/enclave";
option (gogoproto.goproto_getters_all) = false;

service Query {
  rpc AvailableEnclaveKeys(QueryAvailableEnclaveKeysRequest) returns (QueryAvailableEnclaveKeysResponse);
  rpc EnclaveKey(QueryEnclaveKeyRequest) returns (QueryEnclaveKeyResponse);
}

message QueryAvailableEnclaveKeysRequest {
  bytes mrenclave = 1;
}

message QueryAvailableEnclaveKeysResponse {
  repeated EnclaveKeyInfo keys = 1;
}

message EnclaveKeyInfo {
  oneof key_info {
    IASEnclaveKeyInfo ias = 1;
    DCAPEnclaveKeyInfo dcap = 2;
  }
}

message IASEnclaveKeyInfo {
  bytes enclave_key_address = 1;
  string report = 2;
  uint64 attestation_time = 3;
  bytes signature = 4;
  bytes signing_cert = 5;
}

message DCAPEnclaveKeyInfo {
  bytes enclave_key_address = 1;
  bytes quote = 2;
  uint64 attestation_time = 3;
}

message QueryEnclaveKeyRequest {
  bytes enclave_key_address = 1;
}

message QueryEnclaveKeyResponse {
  EnclaveKeyInfo key = 1;
}
